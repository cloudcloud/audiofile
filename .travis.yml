language: go

go:
  - 1.11.x

dist: xenial

env:
  global:
    - GO111MODULE=on
  matrix:
    - GOARCH=amd64 GOOS=linux
    - GOARCH=amd64 GOOS=darwin
    - GOARCH=amd64 GOOS=windows
    - GOARCH=386 GOOS=linux
    - GOARCH=386 GOOS=windows

before_install:
  - go mod download
  - mkdir ./build
  - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  - curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -
  - sudo apt-get install -y nodejs yarn

addons:
  apt:
    update: true

before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

jobs:
  include:
    - stage: compile
      script: yarn build && go build ./audiofile -o build/audiofile.$GOARCH-$GOOS
    - stage: test
      script: yarn build && go test -coverprofile=./build/cover.tmp -covermode=atomic -race ./...
    - stage: deploy
      script: echo "Deploying to Github Releases"
      deploy:
        provider: releases
        api_key: "$GITHUB_OAUTH_TOKEN"
        file_glob: true
        file: build/audiofile*
        skip_cleanup: true
        on:
          tags: true

after_script:
  - sed -i s#github.com/cloudcloud/audiofile/## ./build/cover.tmp
  - ./cc-test-reporter after-build -t gocov --exit-code $TRAVIS_TEST_RESULT

